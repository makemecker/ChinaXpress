from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

BUTTONS: dict[str, str] = {
    'buy': 'üõí –ö—É–ø–∏—Ç—å –∏ –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä üöö',
    'yes_url': 'üëç –î–∞, —É –º–µ–Ω—è –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ üîó',
    'no_url': 'üö´ –ù–µ—Ç, —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä –Ω–µ –∏–º–µ–µ—Ç—Å—è.',
    'yes_description': '‚úÖ –î–∞, —Ö–æ—á—É –≤–≤–µ—Å—Ç–∏ –ø–æ—è—Å–Ω–µ–Ω–∏–µ –∫ –∑–∞–∫–∞–∑—É ‚úçÔ∏è',
    'no_description': '‚ùå –ù–µ—Ç, –ø–æ—è—Å–Ω–µ–Ω–∏–µ –Ω–µ –Ω—É–∂–Ω–æ.',
    'yes_more_product': '‚úÖ –î–∞, —è —Ö–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –µ—â—ë –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä! üõí',
    'no_more_product': '‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑ üì¶',
    'alipay': 'üí∏ Alipay',
    'wechat_pay': 'üí∞ WeChat Pay',
    'other_bank': 'üè¶ –î—Ä—É–≥–æ–π –∫–∏—Ç–∞–π—Å–∫–∏–π –±–∞–Ω–∫',
    'yes_pay_description': '‚úÖ –î–∞, —Ö–æ—á—É –≤–≤–µ—Å—Ç–∏ –ø–æ—è—Å–Ω–µ–Ω–∏–µ –∫ –æ–ø–ª–∞—Ç–µ üí≥‚úçÔ∏è',
    'no_pay_description': 'üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É üí≥',
    'pay': 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å —Ç–æ–≤–∞—Ä üõçÔ∏è',
    'delivery': 'üöö –î–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä üì¶',
    'sizes': 'üìè –î–ª–∏–Ω–∞, —à–∏—Ä–∏–Ω–∞, –≤—ã—Å–æ—Ç–∞ –∏ –º–∞—Å—Å–∞ –∫–æ—Ä–æ–±–∫–∏ üìê',
    'volume': 'üìä –û–±—ä—ë–º –∏ –º–∞—Å—Å–∞ –∫–æ—Ä–æ–±–∫–∏üì¶',
    'density': '‚öñÔ∏è –ü–ª–æ—Ç–Ω–æ—Å—Ç—å üì¶',
    'confirm_car_delivery': '‚úÖ –î–∞, –¥–æ—Å—Ç–∞–≤–∫–∞ –∞–≤—Ç–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º üöó',
    'confirm_train_delivery': '‚úÖ –î–∞, –¥–æ—Å—Ç–∞–≤–∫–∞ –∂–¥ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º üöÇ',
    'deny_delivery': '‚ùå –ù–µ—Ç, –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é.',
    'yes_delivery_description': '‚úÖ –î–∞, —Ö–æ—á—É –≤–≤–µ—Å—Ç–∏ –ø–æ—è—Å–Ω–µ–Ω–∏–µ –∫ –¥–æ—Å—Ç–∞–≤–∫–µ üì¶‚úçÔ∏è',
    'no_delivery_description': '‚ùå –ù–µ—Ç, –ø–æ—è—Å–Ω–µ–Ω–∏–µ –Ω–µ –Ω—É–∂–Ω–æ.',
    'help': 'üó£Ô∏è –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É üìû',
    }


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –ª–µ—Ç—É
def create_inline_kb(*args: str,
                     **kwargs: str) -> InlineKeyboardMarkup:
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∏–ª–¥–µ—Ä
    kb_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    buttons: list[InlineKeyboardButton] = []

    # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ args –∏ kwargs
    if args:
        for button in args:
            buttons.append(InlineKeyboardButton(
                text=BUTTONS[button] if button in BUTTONS else button,
                callback_data=button))
    if kwargs:
        for button, text in kwargs.items():
            buttons.append(InlineKeyboardButton(
                text=text,
                callback_data=button))

    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –±–∏–ª–¥–µ—Ä –º–µ—Ç–æ–¥–æ–º row c –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º width
    kb_builder.row(*buttons, width=1)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    return kb_builder.as_markup()
